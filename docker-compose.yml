services:
  stats-db:
    image: postgres:16.1
    container_name: stats-db
    environment:
      POSTGRES_DB: stats_db
      POSTGRES_USER: stats_user
      POSTGRES_PASSWORD: stats_password
    ports:
      - "5432:5432"
    volumes:
      - stats-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stats_user -d stats_db"]
      interval: 5s
      timeout: 5s
      retries: 5


  stats-server:
      build:
        context: .
        dockerfile: stats/stats-server/Dockerfile
      ports:
        - "9090:9090"
        - "9091:9090"  # Дублирующий порт для healthcheck (без /stats)
      environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://stats-db:5432/stats_db
        SPRING_DATASOURCE_USERNAME: stats_user
        SPRING_DATASOURCE_PASSWORD: stats_password
      depends_on:
        stats-db:
          condition: service_healthy
      healthcheck:
        test: [ "CMD-SHELL", "curl -f http://localhost:9090/stats/actuator/health || exit 1" ]
        interval: 10s
        timeout: 5s
        retries: 10
        start_period: 30s

volumes:
  stats-db-data:

#  ewm-service:
#    image: ewm-service:latest
#    container_name: ewm-service
#    ports:
#      - "8080:8080"
#    depends_on:
#      ewm-db:
#        condition: service_healthy
#
#  ewm-db:
#    image: postgres:16.1
#    container_name: ewm-db
#    environment:
#     POSTGRES_DB: ewm_db
#     POSTGRES_USER: ewm_user
#     POSTGRES_PASSWORD: ewm_password
#    healthcheck:
#      test: ["CMD-SHELL", "pgisready -U ewm_user -d ewm_db"]
#      interval: 5s
#      timeout: 5s
#      retries: 5